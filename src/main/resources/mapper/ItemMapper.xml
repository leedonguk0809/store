<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.store.repository.mapper.ItemMapper">

    <!-- 상품 정보를 담는 resultMap -->
    <resultMap id="itemResultMap" type="com.example.store.domain.Item">
        <id property="itemId" column="item_id" />
        <result property="name" column="name" />
        <result property="price" column="price" />
        <result property="info" column="info" />
        <result property="itemImage" column="item_image" />
    </resultMap>

    <resultMap id="itemStockResult" type="com.example.store.response.ItemStock">
        <id property="itemId" column="item_id" />
        <result property="name" column="name" />
        <result property="price" column="price" />
        <result property="info" column="info" />
        <result property="quantity" column="quantity" />
        <result property="itemImage" column="item_image" />
    </resultMap>

    <!-- 새로운 상품을 삽입하는 SQL -->
    <insert id="insertItem" useGeneratedKeys="true" keyProperty="itemId">
        INSERT INTO item (name, price, info,item_image)
        VALUES (#{name}, #{price}, #{info}, #{itemImage})
    </insert>

    <!-- 특정 ID의 상품을 조회하는 SQL -->
    <select id="findItemById" resultMap="itemResultMap">
        SELECT * FROM item WHERE item_id = #{itemId}
    </select>

    <!-- 모든 상품을 조회하는 SQL -->
    <select id="findAllItems" resultMap="itemResultMap">
        SELECT * FROM item
    </select>

    <select id="findAllWithStock" resultMap="itemStockResult">
        SELECT i.item_id, i.name, i.price, s.quantity, i.item_image
        FROM item i LEFT JOIN stock s ON i.item_id=s.item_id
    </select>


    <select id="findByPage" resultMap="itemResultMap">
        SELECT *
        FROM item
        WHERE 1=1
        <!-- keyword에 따른 조건 추가 -->
        <if test="keyword != null and keyword != ''">
            AND (
            name LIKE CONCAT('%', #{keyword}, '%')
            OR info LIKE CONCAT('%', #{keyword}, '%')
            )
        </if>
        ORDER BY item_id
        <choose>
            <when test="asc">
                ASC
            </when>
            <otherwise>
                DESC
            </otherwise>
        </choose>
        LIMIT #{size} OFFSET #{offset}
    </select>


    <!-- 특정 ID의 상품을 업데이트하는 SQL -->
    <update id="updateItem">
        UPDATE item
        SET price = #{price}, info = #{info}
        WHERE item_id = #{itemId}
    </update>

    <!-- 특정 ID의 상품을 삭제하는 SQL -->
    <delete id="deleteItem">
        DELETE FROM item WHERE item_id = #{itemId}
    </delete>

    <delete id="deleteAll">
        DELETE FROM item
    </delete>



</mapper>